Assignment 4 Server : 
#include <sys/types.h>
#include <sys/socket.h>
#include <netdb.h>
#include <stdio.h>
#include <string.h>
#include <unistd.h>

int main()
{
	char sendline[100];
    char recvline[100];
	int listen_fd, comm_fd;
	struct sockaddr_in serveraddr;
	listen_fd = socket(AF_INET,SOCK_STREAM, 0);

	bzero(&serveraddr, sizeof(serveraddr));

	serveraddr.sin_family = AF_INET;
	serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
	serveraddr.sin_port = htons(22000);

	bind(listen_fd, (struct sockaddr *) &serveraddr, sizeof(serveraddr));

	listen(listen_fd, 10);

	comm_fd = accept(listen_fd, (struct sockaddr*) NULL, NULL);

	while(1){
		bzero(sendline,100);
        bzero(recvline,100);
		if(recv(comm_fd,recvline,100,0)<=0){continue;}
		printf("Client - %s", recvline);
		printf("You: ");
        fgets(sendline,100,stdin);
		send(comm_fd,sendline,strlen(sendline),0);
	}
	close(comm_fd);
    close(listen_fd);
}




Assignment 4 Client:
#include <sys/types.h>
#include <sys/socket.h>
#include <netdb.h>
#include <stdio.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>

int main(int argc, char **argv)
{
    int sockfd, n;
    char sendline[100];
    char recvline[100];
    struct sockaddr_in servaddr;

    sockfd = socket(AF_INET, SOCK_STREAM, 0);
    bzero(&servaddr, sizeof(servaddr));

    servaddr.sin_family = AF_INET;
    servaddr.sin_port = htons(22000);
    servaddr.sin_addr.s_addr = inet_addr("127.0.0.1");
    inet_pton(AF_INET, "127.0.0.1", &(servaddr.sin_addr));

    connect(sockfd, (struct sockaddr *)&servaddr, sizeof(servaddr));

    while(1){
        bzero(sendline,100);
        bzero(recvline,100);
        printf("You: ");
        fgets(sendline,100,stdin);
        send(sockfd,sendline,strlen(sendline),0);
        if(recv(sockfd,recvline,100,0)<=0){ 
            printf("Server disconnected.\n");
            break; 
        }
        printf("Server: %s",recvline);
    }

    close(sockfd);
    return 0;
}
